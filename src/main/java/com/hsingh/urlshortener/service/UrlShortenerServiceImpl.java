package com.hsingh.urlshortener.service;

import com.hsingh.urlshortener.model.UrlMapping;
import com.hsingh.urlshortener.repository.UrlMappingRepository;
import com.hsingh.urlshortener.util.Base62Encoder;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

@Service
public class UrlShortenerServiceImpl implements UrlShortenerService {
    private final String baseUrl;
    UrlMappingRepository urlMappingRepository;

    public UrlShortenerServiceImpl(@Value("${shortener.base-url}") String baseUrl, UrlMappingRepository urlMappingRepository){
        this.baseUrl = baseUrl;
        this.urlMappingRepository = urlMappingRepository;
    }

    @Override
    public String shortenUrl(String originalUrl) {
        UrlMapping urlMapping = new UrlMapping();
        urlMapping.setOriginalUrl(originalUrl);
        //This is not the most optimised way. Id should not be autogenerated
        //But should be generated by some other service
        urlMappingRepository.save(urlMapping);

        String shortCode = Base62Encoder.encode(urlMapping.getId());
        urlMapping.setShortCode(shortCode);

        urlMappingRepository.save(urlMapping);
        return baseUrl + "/" + shortCode;
    }

    @Override
    public String getOriginalUrl(String shortCode) {
        UrlMapping urlMapping = urlMappingRepository.findByShortCode(shortCode)
                .orElseThrow(() -> new RuntimeException("Short code not found"));
        return urlMapping.getOriginalUrl();
    }
}
